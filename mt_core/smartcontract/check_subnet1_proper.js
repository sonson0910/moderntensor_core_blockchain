const { ethers } = require("hardhat"); async function main() { const contractAddress = "0xAA6B8200495F7741B0B151B486aEB895fEE8c272"; const demoAddress = "0x9cc8CB3Ce44F5A61beD045E0b15A491d510035e1"; console.log("🔍 CHECKING DEMO_HOTKEY IN SUBNET 1 (PROPER)"); console.log("============================================"); try { const [deployer] = await ethers.getSigners(); const ModernTensor = await ethers.getContractAt("ModernTensor", contractAddress, deployer); console.log("📍 Contract:", contractAddress); console.log("👤 Demo Address:", demoAddress); console.log(""); console.log("🔍 Checking demo_hotkey registration..."); const minerInfo = await ModernTensor.miners(demoAddress); console.log("Raw miner data:", { uid: minerInfo.uid, subnet: minerInfo.subnet_uid.toString(), stake: ethers.utils.formatEther(minerInfo.stake), status: minerInfo.status }); if (minerInfo.uid !== "0x0000000000000000000000000000000000000000000000000000000000000000") { console.log("✅ DEMO_HOTKEY IS REGISTERED!"); console.log("📊 Registration Details:", { uid: minerInfo.uid, subnetId: minerInfo.subnet_uid.toString(), coreStake: ethers.utils.formatEther(minerInfo.stake) + " CORE", btcStake: ethers.utils.formatEther(minerInfo.bitcoin_stake) + " BTC", apiEndpoint: minerInfo.api_endpoint, status: minerInfo.status === 1 ? "ACTIVE" : minerInfo.status === 0 ? "INACTIVE" : "JAILED", registrationTime: new Date(minerInfo.registration_time.toNumber() * 1000).toISOString() }); } else { console.log("❌ DEMO_HOTKEY NOT REGISTERED YET"); } console.log(""); console.log("🔍 Checking subnet 1 current members..."); const subnet1Miners = await ModernTensor.getSubnetMiners(1); console.log(`📊 Subnet 1 has ${subnet1Miners.length} miners total:`); for (let i = 0; i < subnet1Miners.length; i++) { const addr = subnet1Miners[i]; const info = await ModernTensor.miners(addr); console.log(`  ${i+1}. ${addr}`); console.log(`     UID: ${info.uid.slice(0,10)}...${info.uid.slice(-8)}`); console.log(`     Stake: ${ethers.utils.formatEther(info.stake)} CORE`); console.log(`     Status: ${info.status === 1 ? "ACTIVE" : "INACTIVE"}`); console.log(`     API: ${info.api_endpoint}`); } } catch (error) { console.error("❌ Error:", error.message); } } main().catch(console.error);
