const { ethers } = require("hardhat"); async function main() { const contractAddress = "0xAA6B8200495F7741B0B151B486aEB895fEE8c272"; const demoAddress = "0x9cc8CB3Ce44F5A61beD045E0b15A491d510035e1"; console.log("🔍 CHECKING DEMO_HOTKEY IN SUBNET 1"); console.log("==================================="); try { const ModernTensor = await ethers.getContractFactory("ModernTensor"); const contract = ModernTensor.attach(contractAddress); console.log("📍 Contract:", contractAddress); console.log("�� Demo Address:", demoAddress); console.log(""); console.log("🔍 Checking demo_hotkey registration..."); const minerInfo = await contract.miners(demoAddress); console.log("Raw miner info:", { uid: minerInfo.uid, subnet_uid: minerInfo.subnet_uid.toString(), stake: minerInfo.stake.toString(), status: minerInfo.status }); if (minerInfo.uid !== "0x0000000000000000000000000000000000000000000000000000000000000000") { console.log("✅ DEMO_HOTKEY IS REGISTERED!"); console.log("📊 Details:", { uid: minerInfo.uid, subnetId: minerInfo.subnet_uid.toString(), coreStake: ethers.utils.formatEther(minerInfo.stake), apiEndpoint: minerInfo.api_endpoint, status: minerInfo.status === 1 ? "ACTIVE" : minerInfo.status === 0 ? "INACTIVE" : "JAILED" }); } else { console.log("❌ DEMO_HOTKEY NOT REGISTERED"); } console.log(""); console.log("🔍 Checking subnet 1 miners..."); const subnet1Miners = await contract.getSubnetMiners(1); console.log(`📊 Subnet 1 has ${subnet1Miners.length} miners:`); for (let i = 0; i < subnet1Miners.length; i++) { const addr = subnet1Miners[i]; const info = await contract.miners(addr); console.log(`  ${i+1}. ${addr} - UID: ${info.uid.slice(0,10)}... - Status: ${info.status}`); } } catch (error) { console.error("❌ Error:", error.message); } } main().catch(console.error);
