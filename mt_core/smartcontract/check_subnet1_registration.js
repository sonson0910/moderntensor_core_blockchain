const { ethers } = require("hardhat"); async function main() { const txHash = "0x57740635c6d5cac77856c0a56468d2ba1138f53ec8b3c65b5227dc1ec24780fc"; console.log("üîç CHECKING SUBNET 1 REGISTRATION"); console.log("================================="); const receipt = await ethers.provider.getTransactionReceipt(txHash); console.log("Transaction Hash:", txHash); console.log("Status:", receipt.status === 1 ? "‚úÖ SUCCESS" : "‚ùå FAILED"); console.log("Block:", receipt.blockNumber); console.log("Gas used:", receipt.gasUsed.toString()); if (receipt.status === 1) { console.log("üéâ REGISTRATION IN SUBNET 1 SUCCESSFUL!"); console.log("Now checking if demo_hotkey appears in subnet 1..."); const [deployer] = await ethers.getSigners(); const ModernTensor = await ethers.getContractAt("ModernTensor", "0xAA6B8200495F7741B0B151B486aEB895fEE8c272", deployer); const demoAddress = "0x9cc8CB3Ce44F5A61beD045E0b15A491d510035e1"; const minerInfo = await ModernTensor.miners(demoAddress); if (minerInfo.uid !== "0x0000000000000000000000000000000000000000000000000000000000000000") { console.log("‚úÖ DEMO_HOTKEY NOW REGISTERED!"); console.log("üìä Final Registration Info:", { uid: minerInfo.uid.slice(0,10) + "..." + minerInfo.uid.slice(-8), subnetId: minerInfo.subnet_uid.toString(), stake: ethers.utils.formatEther(minerInfo.stake) + " CORE", apiEndpoint: minerInfo.api_endpoint, status: minerInfo.status === 1 ? "ACTIVE" : "INACTIVE" }); const subnet1Miners = await ModernTensor.getSubnetMiners(1); console.log(`ÔøΩÔøΩ Subnet 1 now has ${subnet1Miners.length} miners total`); } else { console.log("‚ùå Demo_hotkey still not showing as registered"); } } else { console.log("üí• Registration failed"); } } main().catch(console.error);
